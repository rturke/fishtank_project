#include <SoftwareSerial.h>
#define Buffer_length 10
SoftwareSerial LCDserial(3, 2);
int salinity_power_pin = 8;
int solenoid_power_a = 12;
int solenoid_power_b = 13;
float salinitypercent;      // current salinity reading
float setpt = .01;          //setpoint
float gain = 0.8;
 float last_salinity_update = 0;
 int deadtime = 10000;
 const float e = 2.71828;

void setup() {
  Serial.begin(9600);
  LCDserial.begin(9600);
  pinMode (salinity_power_pin, OUTPUT);
  pinMode (solenoid_power_a, OUTPUT);
  pinMode (solenoid_power_b, OUTPUT);
  delay(500);
  LCDserial.write(254);
  LCDserial.write(1);
  LCDserial.write(254);
  //LCDserial.write(157);                 // LCD light on command, not working. 
  delay(500);
  LCD_Display();
  //Serial.println("check 1");
}

void loop() {
  int salinity_input_pin = 2;
  int count = 15;
  float salinity_ave, salinity_stdev;
  sensor_reading_stats(salinity_power_pin, salinity_input_pin, count, &salinity_ave, &salinity_stdev,&salinitypercent);  // all major calculations done here
  
  //Serial.println("check 2");
  
  if ( ( millis() - last_salinity_update ) >= deadtime ) {
  
  float LCL, UCL;
float flowA =3.5;
float flowB = 2.3;
const float a = 0.00042;
const float b = 0.00865;
int Di, Salt, on, off;

LCL =setpt - .0017;      // our three times the deviation
UCL =setpt + .0017; 

float mass = gain_error();
float flowA1 = mass/flowA;
float timeA = flowA1*1000;
timeA = abs(timeA);
float flowB1 = mass/flowB;
float timeB = flowB1*1000;
timeB = abs(timeB);
Serial.print("Mass = ");
Serial.println(mass);
Serial.print("TimeA = ");
Serial.println(timeA);
Serial.print("TimeB = ");
Serial.println(timeB);
Serial.print("Salinity Percent = ");
Serial.println(salinitypercent);

update_LCD(LCL,UCL,Di,Salt);
 

    if (salinitypercent>UCL ) {
        
        digitalWrite(solenoid_power_a,HIGH);
        delay(timeA);
        digitalWrite(solenoid_power_a,LOW);   
      
      //Serial.println(digitalRead (solenoid_power_a));
    }
    
   else if (salinitypercent<LCL ) {
        digitalWrite(solenoid_power_b,HIGH);
        delay(timeB);
        digitalWrite(solenoid_power_b,LOW);
      
    }
    
  last_salinity_update = millis();
  
  }
  //Serial.println("check 3");
  Serial.print("Salinity average = ");
  Serial.println(salinity_ave);
  //Serial.print (",  ");
  Serial.print("Salinity Standard Deviation = ");
  Serial.println (salinity_stdev);
  //Serial.print (",  ");
  //Serial.print(salinitypercent,5);
  
  
}
//-------------------------------------------------control / control of solenoids ------------------------------------------------

//NOW IN THE VOID LOOP;

/*void control(){
float LCL, UCL;
float flowA =3.5;
float flowB = 2.3;
const float a = 0.00042;
const float b = 0.00865;
int Di, Salt, on, off;

LCL =setpt - .0017;      // our three times the deviation
UCL =setpt + .0017; 

float mass = gain_error();
float flowA1 = mass/flowA;
float timeA = flowA1*1000;
timeA = abs(timeA);
float flowB1 = mass/flowB;
float timeB = flowB1*1000;
timeB = abs(timeB);
Serial.print("Mass = ");
Serial.println(mass);
Serial.print("TimeA = ");
Serial.println(timeA);
Serial.print("TimeB = ");
Serial.println(timeB);
Serial.print("Salinity Percent = ");
Serial.println(salinitypercent);

update_LCD(LCL,UCL,Di,Salt);
 

    if (salinitypercent>UCL ) {
        
        digitalWrite(solenoid_power_a,HIGH);
        delay(timeA);
        digitalWrite(solenoid_power_a,LOW);   
      
      //Serial.println(digitalRead (solenoid_power_a));
    }
    
   else if (salinitypercent<LCL ) {
        digitalWrite(solenoid_power_b,HIGH);
        delay(timeB);
        digitalWrite(solenoid_power_b,LOW);
      
    }
    
    
  }*/

//-------------------------------------------------sensor_readiing_stats (read sal) ------------------------------------------------

void sensor_reading_stats (int power_pin, int input_pin, int n, float *ave, float *stdev, float *salinitypercent) {
  int i, k;
  float reading [Buffer_length];
  k = min(n, Buffer_length);
  float dev, sum;
  const float a = 0.00042;
  const float b = 0.00865;
  //int Pstate = LOW;
  
  /*if (Pstate == LOW) {    
    Pstate = HIGH;
  } else {
    Pstate = LOW;
  }*/

  for (i = 1 ; i <= k ; i++) {

    digitalWrite (power_pin, HIGH);  // power pin is continuesly on from Pstate if statment 
    delay (100);
    reading[i] = analogRead (input_pin);
    digitalWrite (power_pin, LOW);
    delay(100);
  }

  for (sum = 0.0, i = 1; i <= k; i++) {     // fifteen reading collected 
    sum += reading[i];
  }
  *ave = sum / float(n);                     // calculating average

  for (dev = 0.0, i = 1; i <= k; i++) {
    dev += pow(reading[i] - *ave, 2);
  }
  *stdev = sqrt (dev / float(k - 1));        // calculating standard deviation
  
  *salinitypercent = a*exp(*ave*b); // the average is used to calculate the current salinity reading
  //*salinitypercent = a*(pow(e, *ave*b));
  //Serial.println(*salinitypercent);
  
}

//-------------------------------------------------gain_error / control of solenoids ------------------------------------------------

float gain_error (){
  float change, massT=146,massA;
  float salttank = .01;
  float ditank = 0.0;
  float salinityfraction = salinitypercent/100;
  float f = 0.15;
 
 if (salinitypercent > setpt){
 
 change = salinitypercent - setpt;
 float salfinal = (change*gain)/100;
 
 massA = massT*((1/(1-f))*(gain*(salinityfraction-salfinal))/(salttank - salinityfraction ));
 
 }

 else if(salinitypercent < setpt){
  
  change = setpt - salinitypercent;
  float salfinal = (change*gain)/100;
  
  massA = massT*((1/(1-f))*(gain*(salinityfraction-salfinal))/(ditank - salinityfraction ));
 }
 Serial.print("Mass A = ");
 Serial.println(massA);
 return massA;
}

 
void update_LCD(float LCL, float UCL,int Di,int Salt) {

  char LCD_string[10];

  dtostrf(LCL, 5, 3, LCD_string);
  LCDserial.write(254);
  LCDserial.write(192);
  LCDserial.write(LCD_string);

  
  LCDserial.write(254);
  LCDserial.write(212);
  LCDserial.write(Salt);

  dtostrf(setpt, 5, 3, LCD_string);
  LCDserial.write(254);
  LCDserial.write(199);
  LCDserial.write(LCD_string);

  dtostrf(salinitypercent, 5, 4, LCD_string);
  LCDserial.write(254);
  LCDserial.write(219);
  LCDserial.write(LCD_string);

  dtostrf(UCL, 5, 3, LCD_string);
  LCDserial.write(254);
  LCDserial.write(206);
  LCDserial.write(LCD_string);

  
  LCDserial.write(254);
  LCDserial.write(226);
  LCDserial.write(Di);
}

void LCD_Display() {
  LCDserial.write(254);
  LCDserial.write(133);
  LCDserial.write(" LCL");

  LCDserial.write(254);
  LCDserial.write(135); 
  LCDserial.write("SetPt");

  LCDserial.write(254);
  LCDserial.write(143);
  LCDserial.write("UCL");

  LCDserial.write(254);
  LCDserial.write(148);
  LCDserial.write("Salty");

  LCDserial.write(254);
  LCDserial.write(154);
  LCDserial.write("Current");

  LCDserial.write(254);
  LCDserial.write(163);
  LCDserial.write("DI");
}
